# ДОМАШНЕЕ ЗАДАНИЕ 3

# Задача 16:
# Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
# Пользователь в первой строке вводит натуральное число N – количество элементов
# в массиве. В последующих строках записаны N целых чисел Ai.
# Последняя строка содержит число X.
# 5
# 1 2 3 4 5
# 3
# -> 1

#   ---   # Вариант 1
# list_1 = []
# for i in range(int(input('Введите количество элементов массива: '))):
#     list_1.append(int(input()))

# print(*list_1)                  # можно записать и так, тогда не будет , и []
# x = int(input('Введите искомое число X: '))
# count = 0
# for i in range(len(list_1)):    # чтобы не выйти за границу списка
#     if x == list_1[i]:
#         count += 1
# print(count)


#   ---   # Вариант 2
# N = int(input('Введите количество элементов массива: '))
# list_1 = [i for i in range(N)]
# print(list_1)       # вывести в косоль списка в []
# print(*list_1) # можно записать и так, тогда не будет , и []
# x = int(input('Введите искомое число X: '))
# count = 0
# for i in range(len(list_1)): # чтобы не выйти за границу списка
#     if x == list_1[i]:
#         count += 1
# print(count)

# -------------

# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к
# заданному числу X. Пользователь в первой строке вводит натуральное число N –
# количество элементов в массиве. В последующих строках записаны N целых чисел Ai.
# Последняя строка содержит число X.
# 5
# 1 2 3 4 5
# 6
# -> 5

# list_1 = []
# for i in range(int(input('Введите количество элементов массива: '))):
#     list_1.append(int(input()))

# print(*list_1)                  # можно записать так и тогда не будет , и []
# x = int(input('Введите заданное число X: '))

# res = []
# for i in range(len(list_1)):
#     res.append(abs(list_1[i] - x))
#     i = res.index(min(res))
# print('Ближайший по величине элемент -', list_1[i])

# Вариант 2
# a=list(map(int,input().split()))
# b=int(input())
# c=[]
# for i in a:
#     c.append(abs(b-i))
# d=c.index(min(c))
# print(a[d])

# -------------

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную
# ценность. В случае с английским алфавитом очки распределяются так:
# ● A, E, I, O, U, L, N, S, T, R – 1 очко;
# ● D, G – 2 очка;
# ● B, C, M, P – 3 очка;
# ● F, H, V, W, Y – 4 очка;
# ● K – 5 очков;
# ● J, X – 8 очков;
# ● Q, Z – 10 очков.
# А русские буквы оцениваются так:
# ● А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# ● Д, К, Л, М, П, У – 2 очка;
# ● Б, Г, Ё, Ь, Я – 3 очка;
# ● Й, Ы – 4 очка;
# ● Ж, З, Х, Ц, Ч – 5 очков;
# ● Ш, Э, Ю – 8 очков;
# ● Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только
# английские, либо только русские буквы.
# Ввод:
# ноутбук
# Вывод:
# 12

word = 'паром'
# word = 'ball'
scrabble_eng = {1: 'AEIOULNSTR', 2: 'DG', 3: 'BCMP', 4: 'FHVWY', 5: 'K', 8: 'JX', 10: 'QZ'}
scrabble_rus = {1: 'АВЕИНОРСТ', 2: 'ДКЛМПУ', 3: 'БГЁЬЯ', 4: 'ЙЫ', 5: 'ЖЗХЦЧ', 8: 'ШЭЮ', 10: 'ЩЪ'}
sent = word.upper()
count = 0
for i in sent:
    if i in 'AEIOULNSTRDGBCMPFHVWYKJXQZ':
        for j in scrabble_eng:
            if i in scrabble_eng[j]:
                count += j
    else:
        for j in scrabble_rus:
            if i in scrabble_rus[j]:
                count += j            
print(count)

# -------------