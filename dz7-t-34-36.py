# ДОМАШНЕЕ ЗАДАНИЕ 7
# Задача 34: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку
# разобраться в его кричалках не настолько просто, насколько легко он их придумывает, Вам
# стоит написать программу. Винни-Пух считает, что ритм есть, если число слогов (т.е. число
# гласных букв) в каждой фразе стихотворения одинаковое. Фраза может состоять из одного
# слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг
# от друга пробелами. Стихотворение Винни-Пух вбивает в программу с клавиатуры. В ответе
# напишите “Парам пам-пам”, если с ритмом все в порядке и “Пам парам”, если с ритмом всё не
# в порядке
# Ввод:                                   Вывод:
# пара-ра-рам рам-пам-папам па-ра-па-дам  Парам пам-пам

# str1 = input()
# str2 = str1.lower().split()
# f = lambda x: sum(1 for i in x if i in 'аеёиоуыэюя')
# temp = f(str2[0])
# if all([f(i) == temp for i in str2]):
#     print('Парам пам-пам')
# else:
#     print('Пам парам')

# # вариант 2
# def f(words):
#     return sum(1 for i in words if i in 'аеёиоуыэюя')
    
# str1 = input()
# # str1 = "Нам-песня-строить-и-жить-помогает!"
# # str1 = "Я-помню-чудное-мнговенье!"
# str2 = str1.lower().split()
# temp = f(str2[0])
# if all([f(i) == temp for i in str2]):
#     print('Парам пам-пам')
# else:
#     print('Пам парам')

# -------------------------------

# Задача 36: Напишите функцию print_operation_table(operation, num_rows=6, num_columns=6),
# которая принимает в качестве аргумента функцию, вычисляющую элемент по номеру строки и
# столбца. Аргументы num_rows и num_columns указывают число строк и столбцов таблицы,
# которые должны быть распечатаны. Нумерация строк и столбцов идет с единицы (подумайте,
# почему не с нуля). Примечание: бинарной операцией называется любая операция, у которой
# ровно два аргумента, как, например, у операции умножения.
# Ввод:                                       Вывод:
# print_operation_table(lambda x, y: x * y)   1 2 3 4 5 6 
#                                             2 4 6 8 10 12
#                                             3 6 9 12 15 18
#                                             4 8 12 16 20 24
#                                             5 10 15 20 25 30
#                                             6 12 18 24 30 36 

# def print_operation_table(x,y):
# print_operation_table(lambda x, y: x * y)

# tables = [lambda x = x: x*10 for x in range(1, 11)]
# num_rows = int(input('Введите количество рядов: '))
# num_columns = int(input('Введите количество столбцов: '))
def print_operation_table(operation, num_rows = 6, num_columns = 6):
    for i in range(1, num_rows + 1):
        row = []
        for j in range(1, num_columns + 1):
            row.append(str(operation(i, j)).rjust(len(str(operation(num_rows, j)))))
        print(" ".join(row))

print_operation_table(lambda x, y: x * y)